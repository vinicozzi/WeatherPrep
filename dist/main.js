/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("// const API_URL = 'https://api.open-meteo.com/v1/forecast';\n// const latitude = 52.52;\n// const longitude = 13.41;\n// const current_weather = true;\n// const hourly = 'temperature_2m,relativehumidity_2m,windspeed_10m';\n\n// fetch(`https://api.open-meteo.com/v1/forecast?`)\n//   .then(response => response.json())\n//   .then(data => {\n//     console.log(data);\n//   })\n//   .catch(error => {\n//     console.error(error);\n//   });\n// const city = 'West Islip';\n// const url = ``;\n\nconst city = document.querySelector('#city-input');\nconst weatherButton = document.querySelector('#weather-button');\nweatherButton.addEventListener(\"click\", () => {\n  const cityValue = encodeURIComponent(city.value);\n  fetch(`https://geocode.maps.co/search?city=${cityValue}`).then(response => response.json()).then(data => {\n    const longitude = data[0].lon;\n    const latitude = data[0].lat;\n    fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&daily=weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min&temperature_unit=fahrenheit&windspeed_unit=mph&precipitation_unit=inch&timezone=auto`).then(response => response.json()).then(data => {\n      const values = Object.values(Object.values(data)[8]);\n      let dailyArray = [];\n      for (let i = 0; i < values.length; i++) {\n        dailyArray = dailyArray.concat(values[i][0]);\n      }\n      const date = dailyArray[0];\n      const weathercode = dailyArray[1];\n      const temp_max = dailyArray[2];\n      const temp_min = dailyArray[3];\n      const apparent_max = dailyArray[4];\n      const apparent_min = dailyArray[5];\n\n      // Weather codes\n      const weatherCodes = [{\n        range: [0],\n        description: 'Clear Sky'\n      }, {\n        range: [1, 2, 3],\n        description: 'Mainly clear, partly cloudy, and overcast'\n      }, {\n        range: [45, 48],\n        description: 'Fog and depositing rime fog'\n      }, {\n        range: [51, 53, 55],\n        description: 'Drizzle: Light, moderate, and dense intensity'\n      }, {\n        range: [56, 57],\n        description: 'Freezing Drizzle: Light and dense intensity'\n      }, {\n        range: [61, 63, 65],\n        description: 'Rain: Slight, moderate and heavy intensity'\n      }, {\n        range: [66, 67],\n        description: 'Freezing Rain: Light and heavy intensity'\n      }, {\n        range: [71, 73, 75],\n        description: 'Snow fall: Slight, moderate, and heavy intensity'\n      }, {\n        range: [77],\n        description: 'Snow grains'\n      }, {\n        range: [80, 81, 82],\n        description: 'Rain showers: Slight, moderate, and violent'\n      }, {\n        range: [85, 86],\n        description: 'Snow showers slight and heavy'\n      }];\n\n      // Find weather code description\n      const weatherCode = weatherCodes.find(_ref => {\n        let {\n          range\n        } = _ref;\n        return range.includes(weathercode);\n      });\n      document.getElementById('weathercode').innerHTML = weatherCode ? weatherCode.description : '';\n\n      // Update weather data\n      document.querySelector('#date').innerHTML = date;\n      document.getElementById('temp-max').innerHTML = temp_max;\n      document.getElementById('temp-min').innerHTML = temp_min;\n      document.getElementById('apparent-max').innerHTML = apparent_max;\n      document.getElementById('apparent-min').innerHTML = apparent_min;\n    }).catch(error => {\n      console.error(error);\n    });\n  }).catch(error => {\n    console.error(error);\n  });\n});\n\n// async function presentLongAndLat(address) {\n//     const url = `https://geocode.maps.co/search?city={city}`\n//     const response = await fetch(url);\n//     const data = await response.json();\n//     console.log(data);\n// // }\n// https://geocode.maps.co/search?street=555+5th+Ave&city=New+York&state=NY&postalcode=10017&country=US\n\n// presentLongAndLat('New York');\n// Define a function to fetch weather data for a given city\n// async function fetchWeatherData(city) {\n//     // Use the open-meteo API to get the weather forecast for the city\n//     const url = `https://api.open-meteo.com/v1/forecast?place=Berlin`;\n//     const response = await fetch(url);\n//     const data = await response.json();\n//     console.log(data);  \n//     // Use the temperature data to provide clothing advice\n//     // ...\n//   }\n\n// Example usage:\n//   fetchWeatherData('Berlin');\n\n//   https://api.open-meteo.com/v1/forecast\n//   ?latitude=52.52\n//   &longitude=13.41\n//   &hourly=temperature_2m&\n//   hourly=relativehumidity_2m&\n//   hourly=dewpoint_2m&\n//   hourly=apparent_temperature&\n//   hourly=precipitation_probability\n//   &hourly=precipitation\n//   &hourly=rain\n//   &hourly=showers\n//   &hourly=snowfall\n//   &hourly=snow_depth\n//   &hourly=windspeed_10m\n//   &hourly=windspeed_80m\n//   &hourly=windspeed_120m\n//   &hourly=windspeed_180m\n//   &daily=weathercode\n//   &daily=temperature_2m_max\n//   &daily=temperature_2m_min\n//   &temperature_unit=fahrenheit\n//   &windspeed_unit=mph\n//   &precipitation_unit=inch\n//   &timeformat=unixtime\n//   &past_days=0&forecast_days=\n//   7&start_date=2023-05-27&end_date=\n//   2023-05-28&timezone=America%2\n//   FNew_York//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVycHJlcC8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;